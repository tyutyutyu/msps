name: Publish PyPI

on:
  push:
    branches:
      - main

permissions: read-all

jobs:
  release-prod:
    name: Publish PyPI
    runs-on: ubuntu-latest

    environment:
      name: release-prod
      url: https://pypi.org/p/msps

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: poetry

      - name: Install packages
        run: poetry install

      - name: Build
        run: poetry build

      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl

      - name: Get version
        run: echo "VERSION=$(poetry --short version)" >> $GITHUB_ENV

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release create \
            "${VERSION}" \
            dist/** \
            --repo '${{ github.repository }}' \
            --generate-notes \
            --title "${VERSION}"

      - name: Create Pull Request to main
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          PR_URL=$(gh pr create \
            --base main \
            --title "Merge release back to main" \
            --body "Auto-merge release back to main")
          echo "PR_URL=${PR_URL}" >> $GITHUB_ENV

      - name: Merge Pull Request to main
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh pr merge \
            --auto \
            --merge \
            --delete-branch \
             "${PR_URL}"
